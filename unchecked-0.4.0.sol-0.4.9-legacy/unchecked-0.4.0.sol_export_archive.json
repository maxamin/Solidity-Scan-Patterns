{"compilation_units": {"/home/monty/tob/tools/slither/tests/ast-parsing/unchecked-0.4.0.sol": {"compiler": {"compiler": "solc", "version": "0.4.9", "optimized": false}, "asts": {"/home/monty/tob/tools/slither/tests/ast-parsing/unchecked-0.4.0.sol": {"children": [{"attributes": {"fullyImplemented": true, "isLibrary": false, "linearizedBaseContracts": [1], "name": "C"}, "children": [], "id": 1, "name": "ContractDefinition", "src": "0:345:1"}], "name": "SourceUnit"}}, "contracts": {"tests/ast-parsing/unchecked-0.4.0.sol": {"C": {"abi": [], "bin": "60606040523415600b57fe5b5b60338060196000396000f30060606040525bfe00a165627a7a723058206ce03e5419ea139e26852dc339e8ad6e2bfe83fd476586df3ed7c7e79ff32c4a0029", "bin-runtime": "60606040525bfe00a165627a7a723058206ce03e5419ea139e26852dc339e8ad6e2bfe83fd476586df3ed7c7e79ff32c4a0029", "srcmap": "0:345:1:-;;;;;;;;;;;;;;;;", "srcmap-runtime": "0:345:1:-;;;;", "filenames": {"absolute": "/home/monty/tob/tools/slither/tests/ast-parsing/unchecked-0.4.0.sol", "used": "/home/monty/tob/tools/slither/tests/ast-parsing/unchecked-0.4.0.sol", "short": "tests/ast-parsing/unchecked-0.4.0.sol", "relative": "tests/ast-parsing/unchecked-0.4.0.sol"}, "libraries": {}, "is_dependency": false, "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}}}, "filenames": [{"absolute": "/home/monty/tob/tools/slither/tests/ast-parsing/unchecked-0.4.0.sol", "used": "/home/monty/tob/tools/slither/tests/ast-parsing/unchecked-0.4.0.sol", "short": "tests/ast-parsing/unchecked-0.4.0.sol", "relative": "tests/ast-parsing/unchecked-0.4.0.sol"}]}}, "package": null, "working_dir": "/home/monty/tob/tools/slither", "type": 1, "unit_tests": [], "crytic_version": "0.0.1", "source_content": {"/home/monty/tob/tools/slither/tests/ast-parsing/unchecked-0.4.0.sol": "contract C {\n    // this start with 0.8\n    /*\n    function f(uint a, uint b) pure public returns (uint) {\n        // This addition will wrap on underflow.\n        unchecked { return a - b; }\n    }\n    function g(uint a, uint b) pure public returns (uint) {\n        // This addition will revert on underflow.\n        return a - b;\n    }\n    */\n}\n"}}