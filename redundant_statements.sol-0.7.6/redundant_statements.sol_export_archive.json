{"compilation_units": {"/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol": {"compiler": {"compiler": "solc", "version": "0.7.6", "optimized": false}, "source_units": {"tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol": {"ast": {"absolutePath": "tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol", "exportedSymbols": {"RedundantStatementsContract": [57]}, "id": 58, "nodeType": "SourceUnit", "nodes": [{"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 57, "linearizedBaseContracts": [57], "name": "RedundantStatementsContract", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 40, "nodeType": "Block", "src": "131:72:1", "statements": [{"expression": {"id": 33, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "141:4:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 32, "name": "uint", "nodeType": "ElementaryTypeName", "src": "141:4:1", "typeDescriptions": {}}}, "id": 34, "nodeType": "ExpressionStatement", "src": "141:4:1"}, {"expression": {"id": 36, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "155:4:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_bool_$", "typeString": "type(bool)"}, "typeName": {"id": 35, "name": "bool", "nodeType": "ElementaryTypeName", "src": "155:4:1", "typeDescriptions": {}}}, "id": 37, "nodeType": "ExpressionStatement", "src": "155:4:1"}, {"expression": {"id": 38, "name": "RedundantStatementsContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 57, "src": "169:27:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_RedundantStatementsContract_$57_$", "typeString": "type(contract RedundantStatementsContract)"}}, "id": 39, "nodeType": "ExpressionStatement", "src": "169:27:1"}]}, "id": 41, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 30, "nodeType": "ParameterList", "parameters": [], "src": "121:2:1"}, "returnParameters": {"id": 31, "nodeType": "ParameterList", "parameters": [], "src": "131:0:1"}, "scope": 57, "src": "110:93:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 55, "nodeType": "Block", "src": "247:71:1", "statements": [{"expression": {"id": 47, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "257:4:1", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 46, "name": "uint", "nodeType": "ElementaryTypeName", "src": "257:4:1", "typeDescriptions": {}}}, "id": 48, "nodeType": "ExpressionStatement", "src": "257:4:1"}, {"expression": {"id": 49, "name": "assert", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -3, "src": "271:6:1", "typeDescriptions": {"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 50, "nodeType": "ExpressionStatement", "src": "271:6:1"}, {"expression": {"id": 51, "name": "test", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 56, "src": "287:4:1", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$", "typeString": "function () returns (uint256)"}}, "id": 52, "nodeType": "ExpressionStatement", "src": "287:4:1"}, {"expression": {"hexValue": "373737", "id": 53, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "308:3:1", "typeDescriptions": {"typeIdentifier": "t_rational_777_by_1", "typeString": "int_const 777"}, "value": "777"}, "functionReturnParameters": 45, "id": 54, "nodeType": "Return", "src": "301:10:1"}]}, "functionSelector": "f8a8fd6d", "id": 56, "implemented": true, "kind": "function", "modifiers": [], "name": "test", "nodeType": "FunctionDefinition", "parameters": {"id": 42, "nodeType": "ParameterList", "parameters": [], "src": "222:2:1"}, "returnParameters": {"id": 45, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 44, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 56, "src": "241:4:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 43, "name": "uint", "nodeType": "ElementaryTypeName", "src": "241:4:1", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "240:6:1"}, "scope": 57, "src": "209:109:1", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}], "scope": 58, "src": "66:254:1"}], "src": "66:254:1"}, "contracts": {"RedundantStatementsContract": {"abi": [{"inputs": [], "stateMutability": "nonpayable", "type": "constructor"}, {"inputs": [], "name": "test", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}], "bin": "6080604052348015600f57600080fd5b5060898061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063f8a8fd6d14602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b600061030990509056fea264697066735822122087821a412577d983cb7e4d4e26daba392d3b414384038c7ab53749221ad81cea64736f6c63430007060033", "bin-runtime": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063f8a8fd6d14602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b600061030990509056fea264697066735822122087821a412577d983cb7e4d4e26daba392d3b414384038c7ab53749221ad81cea64736f6c63430007060033", "srcmap": "66:254:1:-:0;;;110:93;;;;;;;;;;66:254;;;;;;", "srcmap-runtime": "66:254:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;209:109;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;241:4;308:3;301:10;;209:109;:::o", "filenames": {"absolute": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol", "used": "tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol", "short": "tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol", "relative": "tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol"}, "libraries": {}, "is_dependency": false, "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}}}}, "filenames": [{"absolute": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol", "used": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol", "short": "tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol", "relative": "tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol"}, {"absolute": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol", "used": "tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol", "short": "tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol", "relative": "tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol"}]}}, "package": null, "working_dir": "/Users/alpharush/tob/slither", "type": 1, "unit_tests": [], "crytic_version": "0.0.2", "source_content": {"/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/redundant-statements/0.7.6/redundant_statements.sol": "// This tests for redundant top-level expressions in statements.\n\ncontract RedundantStatementsContract {\n\n    constructor() public {\n        uint;\n        bool;\n        RedundantStatementsContract;\n    }\n\n    function test() public returns (uint) {\n        uint;\n        assert;\n        test;\n        return 777;\n    }\n}"}}