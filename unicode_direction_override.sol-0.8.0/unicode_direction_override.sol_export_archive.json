{"compilation_units": {"/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol": {"compiler": {"compiler": "solc", "version": "0.8.0", "optimized": false}, "source_units": {"tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol": {"ast": {"absolutePath": "tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol", "exportedSymbols": {"my_contract": [13]}, "id": 14, "nodeType": "SourceUnit", "nodes": [{"id": 8, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "0:23:1"}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 13, "linearizedBaseContracts": [13], "name": "my_contract", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 11, "nodeType": "Block", "src": "91:286:1", "statements": []}, "functionSelector": "2e807794", "id": 12, "implemented": true, "kind": "function", "modifiers": [], "name": "empty_func", "nodeType": "FunctionDefinition", "parameters": {"id": 9, "nodeType": "ParameterList", "parameters": [], "src": "70:2:1"}, "returnParameters": {"id": 10, "nodeType": "ParameterList", "parameters": [], "src": "91:0:1"}, "scope": 13, "src": "51:326:1", "stateMutability": "pure", "virtual": false, "visibility": "external"}], "scope": 14, "src": "24:355:1"}], "src": "0:387:1"}, "contracts": {"my_contract": {"abi": [{"inputs": [], "name": "empty_func", "outputs": [], "stateMutability": "pure", "type": "function"}], "bin": "6080604052348015600f57600080fd5b50606d80601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80632e80779414602d575b600080fd5b60336035565b005b56fea2646970667358221220b4def3479d0778a712077a0100634546ee1782575dbe52dca7c2658222b9587e64736f6c63430008000033", "bin-runtime": "6080604052348015600f57600080fd5b506004361060285760003560e01c80632e80779414602d575b600080fd5b60336035565b005b56fea2646970667358221220b4def3479d0778a712077a0100634546ee1782575dbe52dca7c2658222b9587e64736f6c63430008000033", "srcmap": "24:355:1:-:0;;;;;;;;;;;;;;;;;;;", "srcmap-runtime": "24:355:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51:326;;;:::i;:::-;;;:::o", "filenames": {"absolute": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol", "used": "tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol", "short": "tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol", "relative": "tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol"}, "libraries": {}, "is_dependency": false, "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}}}}, "filenames": [{"absolute": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol", "used": "tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol", "short": "tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol", "relative": "tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol"}, {"absolute": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol", "used": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol", "short": "tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol", "relative": "tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol"}]}}, "package": null, "working_dir": "/Users/alpharush/tob/slither", "type": 1, "unit_tests": [], "crytic_version": "0.0.2", "source_content": {"/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/rtlo/0.8.0/unicode_direction_override.sol": "pragma solidity ^0.8.0;\ncontract my_contract {\n    function empty_func() external pure\n    {\n        // The string below contains 3 RLO and 3 PDF unicode characters\n        // RLO is U+202E and changes the print direction to right-to-left\n        // PDF is U+202C and restores the print direction to what it was before RLO\n        /*ok \u202eaaa\u202ebbb\u202eccc\u202cddd\u202ceee\u202c*/\n    }\n}\n// ----"}}