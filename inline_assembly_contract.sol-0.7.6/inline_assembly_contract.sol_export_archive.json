{"compilation_units": {"/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol": {"compiler": {"compiler": "solc", "version": "0.7.6", "optimized": false}, "source_units": {"tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol": {"ast": {"absolutePath": "tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol", "exportedSymbols": {"GetCode": [21]}, "id": 22, "nodeType": "SourceUnit", "nodes": [{"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "library", "fullyImplemented": true, "id": 21, "linearizedBaseContracts": [21], "name": "GetCode", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 19, "nodeType": "Block", "src": "163:638:1", "statements": [{"AST": {"nodeType": "YulBlock", "src": "182:613:1", "statements": [{"nodeType": "YulVariableDeclaration", "src": "262:30:1", "value": {"arguments": [{"name": "_addr", "nodeType": "YulIdentifier", "src": "286:5:1"}], "functionName": {"name": "extcodesize", "nodeType": "YulIdentifier", "src": "274:11:1"}, "nodeType": "YulFunctionCall", "src": "274:18:1"}, "variables": [{"name": "size", "nodeType": "YulTypedName", "src": "266:4:1", "type": ""}]}, {"nodeType": "YulAssignment", "src": "439:21:1", "value": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "455:4:1", "type": "", "value": "0x40"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "449:5:1"}, "nodeType": "YulFunctionCall", "src": "449:11:1"}, "variableNames": [{"name": "o_code", "nodeType": "YulIdentifier", "src": "439:6:1"}]}, {"expression": {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "530:4:1", "type": "", "value": "0x40"}, {"arguments": [{"name": "o_code", "nodeType": "YulIdentifier", "src": "540:6:1"}, {"arguments": [{"arguments": [{"arguments": [{"name": "size", "nodeType": "YulIdentifier", "src": "560:4:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "566:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "556:3:1"}, "nodeType": "YulFunctionCall", "src": "556:15:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "573:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "552:3:1"}, "nodeType": "YulFunctionCall", "src": "552:26:1"}, {"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "584:4:1", "type": "", "value": "0x1f"}], "functionName": {"name": "not", "nodeType": "YulIdentifier", "src": "580:3:1"}, "nodeType": "YulFunctionCall", "src": "580:9:1"}], "functionName": {"name": "and", "nodeType": "YulIdentifier", "src": "548:3:1"}, "nodeType": "YulFunctionCall", "src": "548:42:1"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "536:3:1"}, "nodeType": "YulFunctionCall", "src": "536:55:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "523:6:1"}, "nodeType": "YulFunctionCall", "src": "523:69:1"}, "nodeType": "YulExpressionStatement", "src": "523:69:1"}, {"expression": {"arguments": [{"name": "o_code", "nodeType": "YulIdentifier", "src": "650:6:1"}, {"name": "size", "nodeType": "YulIdentifier", "src": "658:4:1"}], "functionName": {"name": "mstore", "nodeType": "YulIdentifier", "src": "643:6:1"}, "nodeType": "YulFunctionCall", "src": "643:20:1"}, "nodeType": "YulExpressionStatement", "src": "643:20:1"}, {"expression": {"arguments": [{"name": "_addr", "nodeType": "YulIdentifier", "src": "751:5:1"}, {"arguments": [{"name": "o_code", "nodeType": "YulIdentifier", "src": "762:6:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "770:4:1", "type": "", "value": "0x20"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "758:3:1"}, "nodeType": "YulFunctionCall", "src": "758:17:1"}, {"kind": "number", "nodeType": "YulLiteral", "src": "777:1:1", "type": "", "value": "0"}, {"name": "size", "nodeType": "YulIdentifier", "src": "780:4:1"}], "functionName": {"name": "extcodecopy", "nodeType": "YulIdentifier", "src": "739:11:1"}, "nodeType": "YulFunctionCall", "src": "739:46:1"}, "nodeType": "YulExpressionStatement", "src": "739:46:1"}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 13, "isOffset": false, "isSlot": false, "src": "286:5:1", "valueSize": 1}, {"declaration": 13, "isOffset": false, "isSlot": false, "src": "751:5:1", "valueSize": 1}, {"declaration": 16, "isOffset": false, "isSlot": false, "src": "439:6:1", "valueSize": 1}, {"declaration": 16, "isOffset": false, "isSlot": false, "src": "540:6:1", "valueSize": 1}, {"declaration": 16, "isOffset": false, "isSlot": false, "src": "650:6:1", "valueSize": 1}, {"declaration": 16, "isOffset": false, "isSlot": false, "src": "762:6:1", "valueSize": 1}], "id": 18, "nodeType": "InlineAssembly", "src": "173:622:1"}]}, "functionSelector": "dce4a447", "id": 20, "implemented": true, "kind": "function", "modifiers": [], "name": "at", "nodeType": "FunctionDefinition", "parameters": {"id": 14, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13, "mutability": "mutable", "name": "_addr", "nodeType": "VariableDeclaration", "scope": 20, "src": "106:13:1", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12, "name": "address", "nodeType": "ElementaryTypeName", "src": "106:7:1", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "105:15:1"}, "returnParameters": {"id": 17, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16, "mutability": "mutable", "name": "o_code", "nodeType": "VariableDeclaration", "scope": 20, "src": "142:19:1", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 15, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "142:5:1", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "141:21:1"}, "scope": 21, "src": "94:707:1", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 22, "src": "72:731:1"}], "src": "72:733:1"}, "contracts": {"GetCode": {"abi": [{"inputs": [{"internalType": "address", "name": "_addr", "type": "address"}], "name": "at", "outputs": [{"internalType": "bytes", "name": "o_code", "type": "bytes"}], "stateMutability": "view", "type": "function"}], "bin": "610158610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063dce4a4471461003a575b600080fd5b61007c6004803603602081101561005057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100f7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100bc5780820151818401526020810190506100a1565b50505050905090810190601f1680156100e95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060813b6040519150601f19601f602083010116820160405280825280600060208401853c5091905056fea264697066735822122000d587f079396ba6135001f74aeb02c7088ebd367e9e6ec2890f49d864664af464736f6c63430007060033", "bin-runtime": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063dce4a4471461003a575b600080fd5b61007c6004803603602081101561005057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100f7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100bc5780820151818401526020810190506100a1565b50505050905090810190601f1680156100e95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060813b6040519150601f19601f602083010116820160405280825280600060208401853c5091905056fea264697066735822122000d587f079396ba6135001f74aeb02c7088ebd367e9e6ec2890f49d864664af464736f6c63430007060033", "srcmap": "72:731:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;", "srcmap-runtime": "72:731:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;94:707;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;142:19;286:5;274:18;455:4;449:11;439:21;;584:4;580:9;573:4;566;560;556:15;552:26;548:42;540:6;536:55;530:4;523:69;658:4;650:6;643:20;780:4;777:1;770:4;762:6;758:17;751:5;739:46;182:613;;;;:::o", "filenames": {"absolute": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol", "used": "tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol", "short": "tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol", "relative": "tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol"}, "libraries": {}, "is_dependency": false, "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}}}}, "filenames": [{"absolute": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol", "used": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol", "short": "tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol", "relative": "tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol"}, {"absolute": "/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol", "used": "tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol", "short": "tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol", "relative": "tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol"}]}}, "package": null, "working_dir": "/Users/alpharush/tob/slither", "type": 1, "unit_tests": [], "crytic_version": "0.0.2", "source_content": {"/Users/alpharush/tob/slither/tests/e2e/detectors/test_data/assembly/0.7.6/inline_assembly_contract.sol": "// taken from https://solidity.readthedocs.io/en/v0.4.25/assembly.html\n\nlibrary GetCode {\n    function at(address _addr) public view returns (bytes memory o_code) {\n        assembly {\n            // retrieve the size of the code, this needs assembly\n            let size := extcodesize(_addr)\n            // allocate output byte array - this could also be done without assembly\n            // by using o_code = new bytes(size)\n            o_code := mload(0x40)\n            // new \"memory end\" including padding\n            mstore(0x40, add(o_code, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n            // store length in memory\n            mstore(o_code, size)\n            // actually retrieve the code, this needs assembly\n            extcodecopy(_addr, add(o_code, 0x20), 0, size)\n        }\n    }\n}\n\n"}}