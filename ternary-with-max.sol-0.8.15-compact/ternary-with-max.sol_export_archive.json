{"compilation_units": {"/Users/monty/tob/tools/slither/tests/ast-parsing/ternary-with-max.sol": {"compiler": {"compiler": "solc", "version": "0.8.15", "optimized": false}, "asts": {"/Users/monty/tob/tools/slither/tests/ast-parsing/ternary-with-max.sol": {"absolutePath": "tests/ast-parsing/ternary-with-max.sol", "exportedSymbols": {"TernaryWithMax": [23]}, "id": 24, "nodeType": "SourceUnit", "nodes": [{"abstract": false, "baseContracts": [], "canonicalName": "TernaryWithMax", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 23, "linearizedBaseContracts": [23], "name": "TernaryWithMax", "nameLocation": "9:14:0", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 21, "nodeType": "Block", "src": "101:64:0", "statements": [{"expression": {"id": 19, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 7, "name": "res", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "111:3:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 18, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 10, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "122:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 9, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "122:7:0", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 8, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "117:4:0", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 11, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "117:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 12, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "117:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"components": [{"condition": {"id": 13, "name": "condition", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2, "src": "138:9:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"hexValue": "31", "id": 15, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "155:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "id": 16, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "138:18:0", "trueExpression": {"hexValue": "3130", "id": 14, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "150:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "id": 17, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "137:20:0", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "117:40:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "111:46:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20, "nodeType": "ExpressionStatement", "src": "111:46:0"}]}, "functionSelector": "98c3a6c1", "id": 22, "implemented": true, "kind": "function", "modifiers": [], "name": "f", "nameLocation": "39:1:0", "nodeType": "FunctionDefinition", "parameters": {"id": 3, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2, "mutability": "mutable", "name": "condition", "nameLocation": "55:9:0", "nodeType": "VariableDeclaration", "scope": 22, "src": "50:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1, "name": "bool", "nodeType": "ElementaryTypeName", "src": "50:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "40:30:0"}, "returnParameters": {"id": 6, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5, "mutability": "mutable", "name": "res", "nameLocation": "96:3:0", "nodeType": "VariableDeclaration", "scope": 22, "src": "88:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "88:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "87:13:0"}, "scope": 23, "src": "30:135:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 24, "src": "0:167:0", "usedErrors": []}], "src": "0:168:0"}}, "contracts": {"tests/ast-parsing/ternary-with-max.sol": {"TernaryWithMax": {"abi": [{"inputs": [{"internalType": "bool", "name": "condition", "type": "bool"}], "name": "f", "outputs": [{"internalType": "uint256", "name": "res", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}], "bin": "608060405234801561001057600080fd5b506101da806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806398c3a6c114610030575b600080fd5b61004a600480360381019061004591906100e3565b610060565b6040516100579190610129565b60405180910390f35b60008161006e576001610071565b600a5b60ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61009f9190610173565b9050919050565b600080fd5b60008115159050919050565b6100c0816100ab565b81146100cb57600080fd5b50565b6000813590506100dd816100b7565b92915050565b6000602082840312156100f9576100f86100a6565b5b6000610107848285016100ce565b91505092915050565b6000819050919050565b61012381610110565b82525050565b600060208201905061013e600083018461011a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061017e82610110565b915061018983610110565b92508261019957610198610144565b5b82820490509291505056fea26469706673582212209af7844a904ad9f9b394dc0e7ce7fce7c19ca9de75d858e90bfd71b04b0e943e64736f6c634300080f0033", "bin-runtime": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806398c3a6c114610030575b600080fd5b61004a600480360381019061004591906100e3565b610060565b6040516100579190610129565b60405180910390f35b60008161006e576001610071565b600a5b60ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61009f9190610173565b9050919050565b600080fd5b60008115159050919050565b6100c0816100ab565b81146100cb57600080fd5b50565b6000813590506100dd816100b7565b92915050565b6000602082840312156100f9576100f86100a6565b5b6000610107848285016100ce565b91505092915050565b6000819050919050565b61012381610110565b82525050565b600060208201905061013e600083018461011a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061017e82610110565b915061018983610110565b92508261019957610198610144565b5b82820490509291505056fea26469706673582212209af7844a904ad9f9b394dc0e7ce7fce7c19ca9de75d858e90bfd71b04b0e943e64736f6c634300080f0033", "srcmap": "0:167:0:-:0;;;;;;;;;;;;;;;;;;;", "srcmap-runtime": "0:167:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;88:11;138:9;:18;;155:1;138:18;;;150:2;138:18;117:40;;:17;:40;;;;:::i;:::-;111:46;;30:135;;;:::o;88:117:1:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:323::-;747:6;796:2;784:9;775:7;771:23;767:32;764:119;;;802:79;;:::i;:::-;764:119;922:1;947:50;989:7;980:6;969:9;965:22;947:50;:::i;:::-;937:60;;893:114;691:323;;;;:::o;1020:77::-;1057:7;1086:5;1075:16;;1020:77;;;:::o;1103:118::-;1190:24;1208:5;1190:24;:::i;:::-;1185:3;1178:37;1103:118;;:::o;1227:222::-;1320:4;1358:2;1347:9;1343:18;1335:26;;1371:71;1439:1;1428:9;1424:17;1415:6;1371:71;:::i;:::-;1227:222;;;;:::o;1455:180::-;1503:77;1500:1;1493:88;1600:4;1597:1;1590:15;1624:4;1621:1;1614:15;1827:185;1867:1;1884:20;1902:1;1884:20;:::i;:::-;1879:25;;1918:20;1936:1;1918:20;:::i;:::-;1913:25;;1957:1;1947:35;;1962:18;;:::i;:::-;1947:35;2004:1;2001;1997:9;1992:14;;1827:185;;;;:::o", "filenames": {"absolute": "/Users/monty/tob/tools/slither/tests/ast-parsing/ternary-with-max.sol", "used": "tests/ast-parsing/ternary-with-max.sol", "short": "tests/ast-parsing/ternary-with-max.sol", "relative": "tests/ast-parsing/ternary-with-max.sol"}, "libraries": {}, "is_dependency": false, "userdoc": {"methods": {}, "notice": null}, "devdoc": {"methods": {}, "author": null, "details": null, "title": null}}}}, "filenames": [{"absolute": "/Users/monty/tob/tools/slither/tests/ast-parsing/ternary-with-max.sol", "used": "tests/ast-parsing/ternary-with-max.sol", "short": "tests/ast-parsing/ternary-with-max.sol", "relative": "tests/ast-parsing/ternary-with-max.sol"}]}}, "package": null, "working_dir": "/Users/monty/tob/tools/slither", "type": 1, "unit_tests": [], "crytic_version": "0.0.1", "source_content": {"/Users/monty/tob/tools/slither/tests/ast-parsing/ternary-with-max.sol": "contract TernaryWithMax {\n    function f(\n        bool condition\n    ) external returns(uint256 res) {\n        res = type(uint256).max / (condition ? 10 : 1) ;\n    }\n}\n"}}